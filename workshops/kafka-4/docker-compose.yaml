version: "3.9"

services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.2.0
    restart: unless-stopped

    ports:
      - 2181:2181
    environment:
      zk_id: "1"
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
    networks:
      - kafka-network


  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8084:8080"
    restart: always

    environment:
      - KAFKA_CLUSTERS_0_NAME=kafka_1
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka_1:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:32181

    depends_on:
      - zookeeper
      - kafka_1
    networks:
      - kafka-network
  kafka_1:
    container_name: kafka_1
    image: confluentinc/cp-kafka:7.2.0
    restart: unless-stopped
    depends_on:
      - zookeeper
#    deploy:
#      resources:
#        limits:
#          cpus: "1"
#          memory: 500m
    ports:
      - 9094:9094
    environment:
      KAFKA_LOG_ROLL_MS: 10000
      KAFKA_SEGMENT_MS: 10000
      KAFKA_MIN_COMPACTION_LAG_MS: 10000
      KAFKA_MAX_COMPACTION_LAG_MS: 10000
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_MIN_CLEANABLE_DIRTY_RATION: 0.0
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:32181"
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka_1:9092,OUTSIDE://127.0.0.1:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    command: sh -c "((sleep 15 && kafka-topics --create --zookeeper zookeeper:32181 --replication-factor 1 --partitions 1 --topic templates)&) && /etc/confluent/docker/run"
    networks:
      - kafka-network
#
#  ksqldb-server:
#    image: confluentinc/ksqldb-server:latest
#    hostname: ksqldb-server
#    container_name: ksqldb-server
#    depends_on:
#      - kafka_1
#    ports:
#      - "8088:8088"
#    environment:
#      KSQL_LISTENERS: http://0.0.0.0:8088
#      KSQL_BOOTSTRAP_SERVERS: kafka_1:9092
#      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
#      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
#    networks:
#      - kafka-network
#
#  ksqldb-cli:
#    image: confluentinc/ksqldb-cli:latest
#    container_name: ksqldb-cli
#    depends_on:
#      - kafka_1
#      - ksqldb-server
#    entrypoint: /bin/sh
#    tty: true
#    networks:
#      - kafka-network


networks:
  kafka-network:
    driver: bridge
